on: # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
  push:
    paths:
      - Dockerfile
      - go.mod
      - ./**.go
  workflow_dispatch:
    inputs:  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
      run-comment: 
        default: ""
defaults: { run: { shell: 'bash -ex {0}' } } # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
env:
  IMAGE_NAME: ghcr.io/${{github.repository}}
  SEMANTIC_VERSION: 0.0.${{ github.run_number }}
run-name: "${{ github.event.ref }} ${{ github.sha }} ${{ github.event.inputs.run-comment }}"
jobs:
  build-tag-push:
    runs-on: ubuntu-latest # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    steps:
      - uses: actions/checkout@v3 # https://github.com/actions/checkout/blob/main/action.yml
      - uses: docker/setup-qemu-action@v2
        with: { platforms: 'arm64,arm' }
      - uses: docker/setup-buildx-action@v2
      - id: build
        run: |
          sudo docker buildx build $GITHUB_WORKSPACE \
          --platform inux/arm64v8 \
          --build-arg BUILD_COMMIT=$GITHUB_SHA \
          --build-arg SEMANTIC_VERSION=$SEMANTIC_VERSION \
          --tag $IMAGE_NAME:$GITHUB_SHA
      - id: tag-default
        if: github.ref_name == github.event.repository.default_branch
        run: |
          sudo docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:$SEMANTIC_VERSION
          sudo docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:latest
          git tag $SEMANTIC_VERSION
          git push origin $SEMANTIC_VERSION
      - id: tag-other
        if: github.ref_name != github.event.repository.default_branch
        run: |
          sudo docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:$GITHUB_REF_NAME-$SEMANTIC_VERSION
          sudo docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:$GITHUB_REF_NAME-latest
      - id: push
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          sudo docker push $IMAGE_NAME --all-tags
  test:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: git-checkout
        uses: actions/checkout@v3 # https://github.com/actions/checkout/blob/main/action.yml
      - name: docker-run-test
        run: |
          sudo docker run \
            --env APP_SERVER_PORT=$TEST_CONTAINER_PORT \
            --publish $TEST_HOST_PORT:$TEST_CONTAINER_PORT \
            --name "${GITHUB_REPOSITORY##*/}-test" \
            --detach \
            $REGISTRY_HOST/$IMAGE_NAME:$GITHUB_SHA
          sleep 5
          curl --verbose --head localhost:$TEST_HOST_PORT
          export CURL_TEST_HTTP_STATUS_CODE=$(curl localhost:$TEST_HOST_PORT --write-out '%{http_code}\n' --silent --output test-response-content.txt)
          if [[ "$CURL_TEST_HTTP_STATUS_CODE" != "200" ]]; then echo "Unexpected http status code $CURL_TEST_HTTP_STATUS_CODE" && exit 1; fi
          echo "Successful HTTP response code $CURL_TEST_HTTP_STATUS_CODE"
          sudo docker rm --force "${GITHUB_REPOSITORY##*/}-test"
      - name: push-image-to-s3
        run: |
          sudo docker run \
            --env REGISTRY_STORAGE=s3 \
            --env REGISTRY_STORAGE_S3_REGION=$REGISTRY_STORAGE_S3_REGION \
            --env REGISTRY_STORAGE_S3_BUCKET=$REGISTRY_STORAGE_S3_BUCKET \
            --detach \
            --publish 127.0.0.1:5000:5000 \
            --name "local-docker-registry" \
            registry.hub.docker.com/library/registry:latest
          sleep 5
          curl --silent --head $REGISTRY_HOST/v2
          sudo docker push $REGISTRY_HOST/$IMAGE_NAME:$GITHUB_SHA
      - name: docker-cleanup
        run: |
          sudo docker rmi $REGISTRY_HOST/$IMAGE_NAME:$GITHUB_SHA
          sudo docker rm --force local-docker-registry
          sudo docker system prune --all --force
