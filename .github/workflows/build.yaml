# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: build
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      imageTag:
        description: Image Tag
        required: false
        default: latest
env:
  IMAGE_NAME: ghcr.io/vorprog/go-api
  COMMIT_SHA_TAG: ${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # needed for pushing to ghcr.io
  TEST_CONTAINER_PORT: 3000
  TEST_HOST_PORT: 3001
defaults:
  run:
    shell: bash -ex {0} # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#custom-shell
jobs:
  build:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - uses: actions/checkout@v2 # https://github.com/actions/checkout/blob/main/action.yml
      - run: |
          sudo docker build $GITHUB_WORKSPACE \
          --build-arg BUILD_COMMIT=$COMMIT_SHA_TAG \
          --tag $IMAGE_NAME:$COMMIT_SHA_TAG \
          --tag $IMAGE_NAME:latest
  test:
    needs: build
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - run: |
          sudo docker run \
          --env APP_SERVER_PORT=$TEST_CONTAINER_PORT \
          --publish $TEST_HOST_PORT:$TEST_CONTAINER_PORT \
          --name "$IMAGE_NAME-test" \
          --detach \
          $IMAGE_NAME:$COMMIT_SHA_TAG
          sleep 5 
          curl --verbose --head localhost:$TEST_HOST_PORT
          export CURL_TEST_HTTP_STATUS_CODE=$(curl localhost:$TEST_HOST_PORT --write-out '%{http_code}\n' --silent --output test-response-content.txt)
          if [[ "$CURL_TEST_HTTP_STATUS_CODE" != "200" ]]; then echo "Unexpected http status code $CURL_TEST_HTTP_STATUS_CODE" && exit 1; fi
          echo "Successful HTTP response code $CURL_TEST_HTTP_STATUS_CODE"
      - run: sudo docker rm --force "test_$IMAGE_NAME"
  push:
    needs: test
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - run: sudo docker push $IMAGE_NAME:$COMMIT_SHA_TAG $IMAGE_NAME:latest
